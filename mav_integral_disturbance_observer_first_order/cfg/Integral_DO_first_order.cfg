#!/usr/bin/env python
PACKAGE = "mav_integral_disturbance_observer_first_order"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

#######################
# calibration
#######################

gen.add("calibrate",    bool_t,    0, "remove constant offsets", False)
gen.add("calibration_duration",    double_t,    0, "calibration_duration", 5 ,  0.001, 10.0) #seconds

#######################
# initial state covariance
#######################
gen.add("P0_position",    double_t,    0, "initial position covariance", 0.1 ,  0.001, 10.0)
gen.add("P0_velocity",    double_t,    0, "initial velocity covariance", 0.1 ,  0.001, 10.0)
gen.add("P0_attitude",    double_t,    0, "initial attitude covariance", 0.1 ,  0.001, 10.0)
gen.add("P0_force",    double_t,    0, "initial force covariance", 0.1 ,  0.001, 10.0)

#######################
# process noise
#######################
gen.add("q_position",    double_t,    0, "position noise", 0.01 ,  0.001, 10.0)
gen.add("q_velocity",    double_t,    0, "velocity noise", 0.025 ,  0.001, 10.0)
gen.add("q_attitude",    double_t,    0, "attitude noise", 0.015 ,  0.001, 10.0)
gen.add("q_force",    double_t,    0, "external force noise", 0.1 ,  0.001, 10.0)

#######################
# measurement noise
#######################
gen.add("r_position",    double_t,    0, "position meas noise", 0.001 ,  0.001, 10.0)
gen.add("r_velocity",    double_t,    0, "velocity meas noise", 0.0012 ,  0.001, 10.0)
gen.add("r_attitude",    double_t,    0, "attitude meas noise", 0.01 ,  0.001, 10.0)

#######################
# Limits
#######################

external_forces_limit = gen.add_group("external_forces_limit") #m/s^2
external_forces_limit.add("external_forces_limit_x",    double_t,    0, "external_forces_limit_x", 5.0 ,  0.001, 100.0)
external_forces_limit.add("external_forces_limit_y",    double_t,    0, "external_forces_limit_y", 5.0 ,  0.001, 100.0)
external_forces_limit.add("external_forces_limit_z",    double_t,    0, "external_forces_limit_z", 3.0 ,  0.001, 100.0)

#######################
# 2nd order dynamics
#######################

drag_coefficients = gen.add_group("drag_coefficients") #m/s^2
drag_coefficients.add("drag_coefficients_x",    double_t,    0, "drag_coefficients_x", 0.02 ,  0.001, 100.0)
drag_coefficients.add("drag_coefficients_y",    double_t,    0, "drag_coefficients_y", 0.02 ,  0.001, 100.0)
drag_coefficients.add("drag_coefficients_z",    double_t,    0, "drag_coefficients_z", 0.02 ,  0.001, 100.0)

gen.add("roll_gain",    double_t,    0, "roll_gain", 0.991811 ,  0.001, 10.0)
gen.add("roll_tau",    double_t,    0, "roll_tau", 0.999770 ,  0.001, 10.0)
gen.add("pitch_gain",    double_t,    0, "pitch_gain", 0.989065 ,  0.001, 10.0)
gen.add("pitch_tau",    double_t,    0, "pitch_tau", 1.0 ,  0.001, 10.0)
gen.add("yaw_gain",    double_t,    0, "yaw_gain", 1.0 ,  0.001, 10.0)
gen.add("yaw_tau",    double_t,    0, "yaw_tau", 0.95 ,  0.001, 10.0)

exit(gen.generate(PACKAGE, "Config", "Integral_DO_first_order"))
