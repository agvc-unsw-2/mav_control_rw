<launch>
  <arg name="mav_name" default="aero" />
  <arg name="namespace" default="$(arg mav_name)"/>
  <arg name="uav_num" default="1"/>
  <param name="use_sim_time" value="false"/>
  <param name="verbose" value="false"/>
  <group ns="$(arg namespace)">
    <node name="mav_nonlinear_mpc" pkg="mav_nonlinear_mpc" type="nonlinear_mpc_node"  respawn="true" clear_params="true" output="screen">
      <rosparam file="$(find mav_nonlinear_mpc)/resources/nonlinear_mpc_$(arg mav_name).yaml"/>
      <rosparam file="$(find mav_disturbance_observer)/resources/disturbance_observer_$(arg mav_name).yaml"/>
      <param name="use_rc_teleop" value="true" />
      <remap from="/$(arg mav_name)/rc" to="/$(arg mav_name)/joy" />
      <!-- WE NEED MAVROS TO PUBLISH THE JOY COMMANDS TO ROS -->
      <remap from="odometry" to="/ODOM_MSG" />
    </node>
    <!-- Don't need joy interface as function is fulfilled by rc_teleop -->
    <!-- <node name="rotors_joy_interface" pkg="rotors_joy_interface" type="rotors_joy_interface" /> -->
    <!-- RC Teleop in mav_nonlinear_mpc node outputs to PID_attitude_controller. Also requires odometry from gazebo -->
    <node name="PID_attitude_controller" pkg="mav_lowlevel_attitude_controller" type="mav_pid_attitude_controller_node" respawn="true" clear_params="true" output="screen">
      <remap from="odometry" to="/ODOM_MSG" />
      <rosparam file="$(find mav_lowlevel_attitude_controller)/resources/PID_attitude_$(arg mav_name).yaml" />
    </node>
  </group>
</launch>


